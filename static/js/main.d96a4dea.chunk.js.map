{"version":3,"sources":["components/Navigation.js","components/Experience.js","components/About.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","offsetTop","Item","href","TabPane","Tabs","Experience","id","tabPosition","tab","key","gutter","span","React","Component","About","style","fontFamily","strings","typeSpeed","Footer","year","Date","getFullYear","type","target","rel","GithubFilled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d96a4dea.chunk.js","sourcesContent":["import React from 'react'\nimport { Affix, Breadcrumb } from 'antd';\n\nconst Nav = () => {\n\n    return (\n        <div className='nav'>\n            <Affix offsetTop={10} >\n                <Breadcrumb>\n                    <Breadcrumb.Item><a href=\"#about\" >\n                        About\n                        </a></Breadcrumb.Item>\n                    <Breadcrumb.Item>\n                        <a href=\"#experience\" >\n                            Experience\n                        </a>\n                    </Breadcrumb.Item>\n                    <Breadcrumb.Item>\n                        <a href=\"#footer\" >\n                            Contact\n                         </a>\n                    </Breadcrumb.Item>\n\n                </Breadcrumb>\n\n            </Affix>\n        </div>\n\n    )\n}\n\nexport default Nav","import React from 'react'\nimport { Row, Col, Tabs } from 'antd';\n\nconst { TabPane } = Tabs;\nclass Experience extends React.Component {\n    render() {\n        return (\n            <div id='experience' className='experience'>\n                <Tabs tabPosition='left'>\n                    <TabPane tab=\"Experience\" key=\"1\">\n                        <Row gutter={[16, 16]}>\n                            <Col span={16} >\n                                <b>Cognac System.</b>\n                            </Col>\n                            <Col span={8} className='date'>\n                                Feb.2020 -- Present\n                            </Col>\n                        </Row>\n                        <Row gutter={[16, 24]}>\n                            <ul><li>Full stack development for internal React web application that enable different teams to keep track of the sales history.</li>\n                                <li>Created flexible, maintainable dashboard components with React Redux and ensure a consistent visual design across various apps. Applied React-Router to reuse and update components without refreshing the DOM.</li>\n                                <li>Built RESTful API by Node Express to support the AJAX module and coordinated with back-end engineers to design the data structure to improve efficiency of retrieving data.</li>\n                                <li>Worked with Agile methodology, attended monthly Sprints and daily Scrums to discuss the development of application</li>\n                            </ul>\n                        </Row>\n                        <Row gutter={[16, 16]}>\n                            <Col span={16} >\n                                <b>Ascendia Pictures</b>\n                            </Col>\n                            <Col span={8} className='date'>\n                                Apr.2019 -- Feb.2020\n                            </Col>\n                        </Row>\n                        <Row gutter={[16, 24]}>\n                            <ul><li>\n                                Developed video learning system include class purchase and subtitle translation with ReactJS under MVC framework\n                            </li>\n                                <li>Designed Relational Database to support for video, subtitle and user access control. Implemented and tested the ETL process to execute automated machine learning model and offered ad-hoc analysis.</li>\n                                <li></li>\n                            </ul>\n                        </Row>\n                        <Row gutter={[16, 24]}>\n                            <Col span={16} >\n                                <b>Fordham University</b>\n\n                            </Col>\n                            <Col span={8} className='date'>\n                                May.2019 -- Dec.2020\n                            </Col>\n                        </Row>\n                        <Row gutter={[16, 24]}>\n                            <ul><li>Programmed bash script to deploy data pipeline in Linux server to automatically generate and save data and figure.</li>\n                                <li>Processed and visualized data of university applicants by Python and present analysis of data weekly to professor.</li>\n                                <li>Applied S3VM, S3VM+ machine learning models to predict academic performance of applicants.</li>\n                                <li>Publication: Predicting Student Performance in a Masterâ€™s Program in Data Science using Admissions Data, 13th International Conference on Educational Data Mining (EDM) 2020</li>\n                            </ul>\n                        </Row>\n\n                    </TabPane>\n                    <TabPane tab=\"Skills\" key=\"2\">\n                        <Row gutter={[16, 16]}>\n                            <Col span={24} >\n                                Programming Languages: <br />JavaScript (ES6), Python, HTML5, CSS3(SASS), SQL (MySQL, PostgreSQL, SQLite)\n                            </Col>\n\n                        </Row>\n                        <Row gutter={[16, 16]}>\n                            <Col span={24} >\n                                Web Development:<br /> React.js, Redux, Node.js, Express, jQuery, Bootstrap, axios,Gulp.js, Jest\n                            </Col>\n                        </Row>\n                        <Row gutter={[16, 16]}>\n                            <Col  >\n                                Dev-Ops: <br />Git, NPM, AWS, Heroku, Dockers, MongoDB\n                            </Col>\n                        </Row>\n                        <Row gutter={[16, 16]}>\n                            <Col span={24}>\n                                Tools: <br />Visual Studio Code, Atom, PyCharm, Sublime, Postman\n                                </Col>\n                        </Row>\n\n                    </TabPane>\n                    <TabPane tab=\"Education\" key=\"3\">\n                        <Row gutter={[16, 24]}>\n                            <Col span={16} >\n                                Fordham University, Master of Science\n                                <br /> Data Science GPA:3.8\n                            </Col>\n                            <Col span={8} className='date'>\n                                Aug.2018 -- Feb.2020\n                            </Col>\n                        </Row>\n\n                        <Row gutter={[16, 24]}>\n                            <Col span={16} >\n                                Huzhou University, Bachelor of Science\n                                <br />Applied Mathematics\n                            </Col>\n                            <Col span={8} className='date'>\n                                Sep.2014 -- Jun.2018\n                            </Col>\n                        </Row>\n                        <Row gutter={[16, 24]}>\n                            <Col span={24} >\n                                Relevant Course:<br /> Software Engineering, Algorithms, Big Data Programming, NoSQL Database System, Machine Learning, Cloud Computing\n                            </Col>\n                        </Row>\n\n                    </TabPane>\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default Experience\n","import React from 'react'\nimport Typed from 'react-typed';\n\nclass About extends React.Component {\n\n    render() {\n        return (\n            <div id='about' className=\"about\">\n                <h1 style={{ fontFamily: \"'Dancing Script', cursive\" }}>Nice to see you</h1>\n                <h1>\n                    <Typed\n                        strings={[' Hi, I am Ming Chen!  Welcome to my page.ðŸ–¥ ðŸ˜„']}\n                        typeSpeed={60}\n                    />\n                </h1>\n                <h4>\n                    I am currently a Software Engineer at Cognac Sys. <br />\n                I graduated from Fordham University in Master of Science program.\n                I am always excited to face new challenges and explore newest\n                    technologies.\n                </h4>\n            </div >\n        );\n    }\n}\n\n\n\nexport default About","import React from 'react'\nimport { GithubFilled } from '@ant-design/icons';\nimport { Button } from 'antd';\n\nconst Footer = () => {\n    const year = new Date().getFullYear();\n    return (\n        <div id='footer' className=\"contact\">\n            <a href=\"mailto:fuzzychenming@gmail.com\">\n                <Button type='default'>\n                    Contact me\n                 </Button>\n            </a>\n            <a href=\"https://github.com/FuzzyChen\" target='_blank' rel=\"noopener noreferrer\" className='giticon'>\n                <GithubFilled />\n            </a>\n            <footer>\n                <p>Copyright â“’ {year}</p>\n            </footer>\n        </div>\n\n    )\n}\n\nexport default Footer\n\n","import React from 'react';\nimport './App.css';\nimport Nav from './components/Navigation'\nimport Experience from './components/Experience'\nimport About from './components/About'\nimport Foot from './components/Footer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <div className='ABOUT'>\n        <About />\n      </div>\n\n      <Experience />\n      <Foot />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}